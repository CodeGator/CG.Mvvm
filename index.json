{
  "api/CG.Mvvm.Commands.CommandEventHandler.html": {
    "href": "api/CG.Mvvm.Commands.CommandEventHandler.html",
    "title": "Delegate CommandEventHandler",
    "keywords": "Delegate CommandEventHandler This delegate type is used to process command events. Namespace : CG.Mvvm.Commands Assembly : CG.Mvvm.dll Syntax public delegate void CommandEventHandler(object arg); Parameters Type Name Description System.Object arg Optional arguments for the event."
  },
  "api/CG.Mvvm.Commands.CommandEventHandler-1.html": {
    "href": "api/CG.Mvvm.Commands.CommandEventHandler-1.html",
    "title": "Delegate CommandEventHandler<T>",
    "keywords": "Delegate CommandEventHandler<T> This delegate type is used to process command events. Namespace : CG.Mvvm.Commands Assembly : CG.Mvvm.dll Syntax public delegate void CommandEventHandler<T>(T arg); Parameters Type Name Description T arg Optional arguments for the event. Type Parameters Name Description T The type of associated data."
  },
  "api/CG.Mvvm.Commands.DelegateCommand.html": {
    "href": "api/CG.Mvvm.Commands.DelegateCommand.html",
    "title": "Class DelegateCommand",
    "keywords": "Class DelegateCommand This class is a default implementation of the System.Windows.Input.ICommand interface. Inheritance System.Object DelegateCommand Implements System.Windows.Input.ICommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Mvvm.Commands Assembly : CG.Mvvm.dll Syntax public sealed class DelegateCommand : ICommand Constructors DelegateCommand(CommandEventHandler) This constructor creates a new instance of the DelegateCommand class. Declaration public DelegateCommand(CommandEventHandler handler) Parameters Type Name Description CommandEventHandler handler The delegate to use with the command. Properties IsEnabled This property indicates whether the command can be executed, or not. Declaration public bool IsEnabled { get; } Property Value Type Description System.Boolean Events CanExecuteChanged This event is raised whenever the IsEnabled property of the command has changed. Declaration public event EventHandler CanExecuteChanged Event Type Type Description System.EventHandler Explicit Interface Implementations ICommand.CanExecute(Object) Declaration bool ICommand.CanExecute(object arg) Parameters Type Name Description System.Object arg Returns Type Description System.Boolean ICommand.Execute(Object) Declaration void ICommand.Execute(object arg) Parameters Type Name Description System.Object arg Implements System.Windows.Input.ICommand"
  },
  "api/CG.Mvvm.Commands.DelegateCommand-1.html": {
    "href": "api/CG.Mvvm.Commands.DelegateCommand-1.html",
    "title": "Class DelegateCommand<T>",
    "keywords": "Class DelegateCommand<T> This class is a default implementation of the System.Windows.Input.ICommand interface. Inheritance System.Object DelegateCommand<T> Implements System.Windows.Input.ICommand Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Mvvm.Commands Assembly : CG.Mvvm.dll Syntax public sealed class DelegateCommand<T> : ICommand Type Parameters Name Description T The type of associated data. Constructors DelegateCommand(CommandEventHandler<T>) This constructor creates a new instance of the DelegateCommand class. Declaration public DelegateCommand(CommandEventHandler<T> handler) Parameters Type Name Description CommandEventHandler <T> handler The delegate to use with the command. Properties IsEnabled This property indicates whether the command can be executed, or not. Declaration public bool IsEnabled { get; } Property Value Type Description System.Boolean Events CanExecuteChanged This event is raised whenever the IsEnabled property of the command has changed. Declaration public event EventHandler CanExecuteChanged Event Type Type Description System.EventHandler Explicit Interface Implementations ICommand.CanExecute(Object) Declaration bool ICommand.CanExecute(object arg) Parameters Type Name Description System.Object arg Returns Type Description System.Boolean ICommand.Execute(Object) Declaration void ICommand.Execute(object arg) Parameters Type Name Description System.Object arg Implements System.Windows.Input.ICommand"
  },
  "api/CG.Mvvm.Commands.html": {
    "href": "api/CG.Mvvm.Commands.html",
    "title": "Namespace CG.Mvvm.Commands",
    "keywords": "Namespace CG.Mvvm.Commands Classes DelegateCommand This class is a default implementation of the System.Windows.Input.ICommand interface. DelegateCommand<T> This class is a default implementation of the System.Windows.Input.ICommand interface. Delegates CommandEventHandler This delegate type is used to process command events. CommandEventHandler<T> This delegate type is used to process command events."
  },
  "api/CG.Mvvm.ViewModels.html": {
    "href": "api/CG.Mvvm.ViewModels.html",
    "title": "Namespace CG.Mvvm.ViewModels",
    "keywords": "Namespace CG.Mvvm.ViewModels Classes ViewModelBase This class is a base implementation of the IViewModel interface. Interfaces IViewModel This interface represents a view-model."
  },
  "api/CG.Mvvm.ViewModels.IViewModel.html": {
    "href": "api/CG.Mvvm.ViewModels.IViewModel.html",
    "title": "Interface IViewModel",
    "keywords": "Interface IViewModel This interface represents a view-model. Inherited Members System.ComponentModel.INotifyPropertyChanged.PropertyChanged Namespace : CG.Mvvm.ViewModels Assembly : CG.Mvvm.dll Syntax public interface IViewModel : INotifyPropertyChanged"
  },
  "api/CG.Mvvm.ViewModels.ViewModelBase.html": {
    "href": "api/CG.Mvvm.ViewModels.ViewModelBase.html",
    "title": "Class ViewModelBase",
    "keywords": "Class ViewModelBase This class is a base implementation of the IViewModel interface. Inheritance System.Object CG.DisposableBase ViewModelBase Implements System.IDisposable IViewModel System.ComponentModel.INotifyPropertyChanged Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Mvvm.ViewModels Assembly : CG.Mvvm.dll Syntax public abstract class ViewModelBase : DisposableBase, IDisposable, IViewModel, INotifyPropertyChanged Methods OnPropertyChanged(String) This method raises the PropertyChanged event. Declaration protected virtual void OnPropertyChanged(string propertyName = \"\") Parameters Type Name Description System.String propertyName The name of the property. SetValue<T>(ref T, T, String) This method sets the value of the specified property's backing field, then calls OnPropertyChanged(String) on behalf of the property. Declaration protected void SetValue<T>(ref T backingField, T value, string propertyName = null) Parameters Type Name Description T backingField The backing field associated with the property. T value The value to set in the property. System.String propertyName The name of the property. Type Parameters Name Description T The type of the property. Events PropertyChanged This event is raised whenever a property value changes on the view-model. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description System.ComponentModel.PropertyChangedEventHandler Implements System.IDisposable IViewModel System.ComponentModel.INotifyPropertyChanged"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection"
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.Mvvm.dll Syntax public static class ServiceCollectionExtensions Methods AddViewModels(IServiceCollection, String, String) Declaration public static IServiceCollection AddViewModels(this IServiceCollection serviceCollection, string assemblyWhiteList = \"\", string assemblyBlackList = \"Microsoft.*,System.*,netstandard\") Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection System.String assemblyWhiteList System.String assemblyBlackList Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Mvvm.dll contains model view view-model extensions used by other CodeGator packages."
  }
}